#include<iostream>
using namespace std;
struct Node
{
int *data;
Node* left;
Node* right;
};
Node* createNode(int data)
{
Node* newNode=new Node();
if(!newNode)
{
cout<<"memory is full";
return NULL;
}
else
newNode->data=new int(data);
newNode->left=newNode->right=NULL;
return newNode;
}
void inorderTraversal(Node* root)
{
if(root==NULL)
return;
inorderTraversal(root->left);
cout<<*(root->data)<<" ";
inorderTraversal(root->right);
}
void preorderTraversal(Node* root)
{
if(root==NULL)
return;
cout<<*(root->data)<<" ";
preorderTraversal(root->left);
preorderTraversal(root->right);

}
void postorderTraversal(Node* root)
{
if(root==NULL)
return;

postorderTraversal(root->left);
postorderTraversal(root->right);
cout<<*(root->data)<<" ";
}
int main()
{
Node* root=createNode(1);
root->left=createNode(2);
root->left->left=createNode(3);
root->left->right=createNode(4);
cout<<"inorderTraversal";
inorderTraversal(root);
cout<<endl;
cout<<"preorderTraversal";
preorderTraversal(root);
cout<<endl;
cout<<"postorderTraversal";
postorderTraversal(root);
cout<<endl;
return 0;
}
